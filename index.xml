<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kiyeon&#39;s Blog</title>
    <link>http://blog.kiyeon.net/index.xml</link>
    <description>Recent content on Kiyeon&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Wed, 10 Feb 2016 14:28:00 +0000</lastBuildDate>
    <atom:link href="http://blog.kiyeon.net/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Jekyll</title>
      <link>http://blog.kiyeon.net/2016/02/10/Jekyll/</link>
      <pubDate>Wed, 10 Feb 2016 14:28:00 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2016/02/10/Jekyll/</guid>
      <description>&lt;p&gt;Link&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jekyll Wiki

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jekyll/jekyll/wiki/Themes&#34;&gt;Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jekyll/jekyll/wiki/Sites&#34;&gt;지킬로 만들어진 사이트&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jekyllbootstrap.com/&#34;&gt;jekyllbootstrap.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jekyllthemes.org/&#34;&gt;jekyllthemes.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>리눅스 패키지 설치하기</title>
      <link>http://blog.kiyeon.net/2015/12/04/installing-linux-package/</link>
      <pubDate>Fri, 04 Dec 2015 14:55:00 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/12/04/installing-linux-package/</guid>
      <description>

&lt;h2 id=&#34;ubuntu&#34;&gt;Ubuntu&lt;/h2&gt;

&lt;h3 id=&#34;기본&#34;&gt;기본&lt;/h3&gt;

&lt;p&gt;Something along the lines of:
dpkg &amp;ndash;&amp;gt; apt-get, aptitude &amp;ndash;&amp;gt; Synaptic, Software Center
&lt;a href=&#34;http://askubuntu.com/a/40781&#34;&gt;http://askubuntu.com/a/40781&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;최신-버전-설치&#34;&gt;최신 버전 설치&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;최신 패키지 검색&lt;br /&gt;
&lt;a href=&#34;https://launchpad.net/ubuntu&#34;&gt;Ubuntu package building and hosting&lt;/a&gt;에서 최신 패키지를 검색한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Binary packages built by this source&lt;/strong&gt;에서 설치할 Binary package를 선택한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Published versions&lt;/strong&gt;에서 시스템에 맞는 버전을 선택한다.&lt;br /&gt;
ex) &lt;a href=&#34;https://launchpad.net/ubuntu/xenial/amd64/sqlite3/3.9.2-1&#34;&gt;sqlite3 3.9.2-1(amd64 binary) in ubuntu xenial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Downloadable files&lt;/strong&gt;에서 deb파일을 다운로드 한다.&lt;br /&gt;
&lt;code&gt;wget http://launchpadlibrarian.net/225502540/sqlite3_3.9.2-1_amd64.deb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;다운로드한 deb을 설치한다.&lt;br /&gt;
&lt;code&gt;sudo dpkg -i sqlite3_3.9.2-1_amd64.deb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;의존성 관련 패키지가 필요하면 &lt;strong&gt;Package relationships&lt;/strong&gt;에서 deb을 받아 설치한다.&lt;/li&gt;
&lt;li&gt;설치 완료한 패키지를 실행해본다.&lt;br /&gt;

% sqlite3
SQLite version 3.9.2 2015-11-02 18:31:45
Enter &#34;.help&#34; for usage hints.
Connected to a transient in-memory database.
Use &#34;.open FILENAME&#34; to reopen on a persistent database.
sqlite&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>OCR</title>
      <link>http://blog.kiyeon.net/2015/12/02/ocr/</link>
      <pubDate>Wed, 02 Dec 2015 10:18:00 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/12/02/ocr/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://ko.wikipedia.org/wiki/%EA%B4%91%ED%95%99_%EB%AC%B8%EC%9E%90_%EC%9D%B8%EC%8B%9D&#34;&gt;광학 문자 인식(Optical character recognition; OCR)&lt;/a&gt;&lt;br /&gt;
&lt;img src=&#34;https://janusit.files.wordpress.com/2008/12/300_cpen20reading.jpg&#34; alt=&#34;OCR&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.abbyy.com/finereader/&#34;&gt;ABBYY FineReader&lt;/a&gt; - &lt;a href=&#34;http://chanyong.tistory.com/69&#34;&gt;문자 인식(OCR) 책 스캔 프로그램 추천 : 한글 영문 인식률 결과&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;online-ocr-services&#34;&gt;Online OCR services&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ocr1.sc.isc.tohoku.ac.jp/e1/&#34;&gt;WeOCR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.customocr.com/index.php?r=site/page&amp;amp;view=demos.tesseract_ocr&#34;&gt;CustomOCR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.free-ocr.com/&#34;&gt;Free OCR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.i2ocr.com/&#34;&gt;i2OCR&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;open-source&#34;&gt;Open source&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tesseract-ocr/tesseract&#34;&gt;Tesseract&lt;/a&gt; - Tesseract Open Source OCR Engine (main repository)

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tesseract-ocr/tesseract/wiki/3rdParty&#34;&gt;3rdParty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>AWS EBS 확장및 추가하기</title>
      <link>http://blog.kiyeon.net/2015/11/28/adding-and-expending-aws-EBS/</link>
      <pubDate>Sat, 28 Nov 2015 18:40:00 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/11/28/adding-and-expending-aws-EBS/</guid>
      <description>

&lt;p&gt;AWS EC2의 디스크가 Full이 되어 확장이 필요했다.&lt;/p&gt;

&lt;h2 id=&#34;볼륨-확장&#34;&gt;볼륨 확장&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/ebs-expand-volume.html&#34;&gt;Linux에서 EBS 볼륨의 스토리지 공간 확장&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;인스턴스를 Stop 시킨다.&lt;/li&gt;
&lt;li&gt;EBS Volume을 찾아 Snapshopt을 만든다. (복사용)&lt;/li&gt;
&lt;li&gt;Snapshot에서 2에서 만든 스냅샷을 선택하여 새로운 볼륨을 만든다. 여기서 확장할 사이즈를 정한다. &lt;code&gt;ex) 8GB -&amp;gt; 15GB&lt;/code&gt;, 볼륨이 커지면 비용이 발생하므로 &lt;a href=&#34;https://calculator.s3.amazonaws.com/index.html&#34;&gt;SIMPLE MONTHLY CALCULATOR&lt;/a&gt;로 요금을 계산하자.&lt;/li&gt;
&lt;li&gt;이전 볼륨을 분리(Detach Volume)하고 새로 만든 볼륨을 연결(Attach Volume)한다.&lt;/li&gt;
&lt;li&gt;인스턴스를 다시 시작한다.&lt;/li&gt;
&lt;li&gt;파일 시스템을 확장한다. 여기서부터는 &lt;a href=&#34;http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/ebs-expand-volume.html#recognize-expanded-volume-linux&#34;&gt;Linux 파일 시스템 확장&lt;/a&gt;참조&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;볼륨-추가&#34;&gt;볼륨 추가&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/ec2-add-volume-to-instance.html&#34;&gt;인스턴스에 볼륨 추가&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;추가하려는 인스턴스의 가용 영역(Availability Zone)을 확인한다. 추가 볼륨의 가용 영역이 인스턴스와 같아야 연결할 수 있다.&lt;/li&gt;
&lt;li&gt;EBS메뉴에서 Volumes를 선택하여 새로운 볼륨을 생성한다.(볼륨 유형, 크기, 가용 영역 입력)&lt;/li&gt;
&lt;li&gt;새로 생성된 볼륨을 연결(Attach Volume)한다. 생성한 볼륨의 상태가 &lt;code&gt;available&lt;/code&gt;이 되면 인스턴스에 연결 할 수 있다.&lt;/li&gt;
&lt;li&gt;인스턴스에 접속하여 볼륨을 연결한다.

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lsblk&lt;/code&gt; or &lt;code&gt;sudo fdisk -l | grep Disk&lt;/code&gt;로 연결된 볼륨을 확인 할 수 있다. (&lt;code&gt;blkid&lt;/code&gt;로 UUID와 File system을 확인 할 수 있다.)&lt;/li&gt;
&lt;li&gt;새 볼륨을 사용하려면 포맷을 해야한다. &lt;code&gt;sudo mkfs -t ext4 /dev/xvdf&lt;/code&gt;로 포맷.&lt;/li&gt;
&lt;li&gt;포맷된 디바이스를 mount로 연결한다. &lt;code&gt;sudo mkdir /mnt/my-data&lt;/code&gt;, &lt;code&gt;sudo mount /dev/xvdf /mnt/my-data&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;볼륨-추가-후-fstab-설정&#34;&gt;볼륨 추가 후 fstab 설정&lt;/h3&gt;

&lt;p&gt;부팅 될때마다 mount를 유지하려면 &lt;code&gt;/etc/fstab&lt;/code&gt;에 마운트 정보를 기록해야 한다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;fstab&lt;/code&gt;은 리눅스가 부팅될 때마다 자동으로 읽는 중요한 파일이므로 수정 시에 주의가 필요하다. 글자가 틀릴 경우 부팅 자체가 아예 안될 수 있다.&lt;/p&gt;

&lt;p&gt;fstab에는 6개의 필드가 있다.

# 장치이름     마운트될 디렉토리  파일 시스템 속성       dump 사용 여부  파일 시스템 체크 여부
/dev/sdb1    /home/mydata   ext3     defaults   0             1
&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;device : 장치명이 들어간다. UUID나 Lable등이 사용가능하다. &lt;code&gt;blkid&lt;/code&gt;로 확인.&lt;/li&gt;
&lt;li&gt;mount point&lt;/li&gt;
&lt;li&gt;fstype&lt;/li&gt;
&lt;li&gt;options : defaults로 설정하면 읽기/쓰기/실행 등의 작업이 대부분 가능하다.&lt;/li&gt;
&lt;li&gt;dump : 1로 설정하면 리눅스 dump명령으로 백업이 가능하다.&lt;/li&gt;
&lt;li&gt;fsck : 부팅시 이 파티션을 체크하는데 1인 파일 시스템을 먼저 체크하고 2는 1을 체크한 후에 체크한다. 0은 체크를 생략하며 그로인해 부팅속도가 향상된다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;etc&#34;&gt;Etc&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;현재 디스크의 파일 시스템을 확인하고 싶다면 &lt;code&gt;df -T&lt;/code&gt; 또는 &lt;code&gt;blkid&lt;/code&gt;를 입력한다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Ubuntu에 접속할때 &lt;code&gt;*** /dev/xvda1 should be checked for errors ***&lt;/code&gt;가 나온다면&amp;hellip; 디스크체크&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo vi /etc/default/rcS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#FSCKFIX=no&lt;/code&gt;를 주석처리하고 &lt;code&gt;FSCKFIX=yes&lt;/code&gt;를 추가 (automatically repair filesystems with inconsistencies during boot)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo touch /forcefsck&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;reboot&lt;/li&gt;
&lt;li&gt;리부팅후 &lt;code&gt;/forcefsck&lt;/code&gt;는 없어진다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FSCKFIX=yes&lt;/code&gt;를 제거한다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/ko/&#34;&gt;Amazon Web Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Amazon Elastic Compute Cloud 설명서&#34;&gt;Amazon Elastic Compute Cloud 설명서&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;&lt;a href=&#34;https://kldp.org/node/93119&#34;&gt;https://kldp.org/node/93119&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;&lt;a href=&#34;http://serverfault.com/a/679051&#34;&gt;http://serverfault.com/a/679051&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>LISP</title>
      <link>http://blog.kiyeon.net/2015/11/28/lisp/</link>
      <pubDate>Sat, 28 Nov 2015 01:51:00 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/11/28/lisp/</guid>
      <description>

&lt;h2 id=&#34;lisp-https-ko-wikipedia-org-wiki-eb-a6-ac-ec-8a-a4-ed-94-84&#34;&gt;&lt;a href=&#34;https://ko.wikipedia.org/wiki/%EB%A6%AC%EC%8A%A4%ED%94%84&#34;&gt;LISP&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;표현 기능이 대단히 뛰어난 언어, 가장 복잡한 프로그래밍 아이디어를 명확하고 적절하게 표현할 수 있도록 설계.&lt;/li&gt;
&lt;li&gt;많은 대기업이 핵심적인 업무에 리스프를 사용.&lt;/li&gt;
&lt;li&gt;리스프는 작은 노력으로도 배울 수 있지만 컴퓨터 프로그래밍에 대해 깊은 통찰력을 갖게 한다.&lt;/li&gt;
&lt;li&gt;확장성 있는 라이브러리를 비롯한 수많은 언어 기능을 지원하며 컴파일러/인터프리터를 무척 쉽게 수정할 수 있다. 리스프의 주된 원리를 따르는 모든 언어는 리스프의 변종이라 하고 그래서 &lt;strong&gt;리스프는 변종이 많다.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;가장 많이 사용하는 리스프는 &lt;strong&gt;안시 커먼 리스프&lt;/strong&gt;와 &lt;strong&gt;스킴&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;안시 커먼 리스프

&lt;ul&gt;
&lt;li&gt;1981년 많은 리스프 변종에 대응하고자 리스프 단체에서 커먼 리스프라는 리스프 명세서를 발표.&lt;/li&gt;
&lt;li&gt;1986년 커먼 리스프가 좀 더 다듬어져 안시 커먼 리스프 규격으로 바뀌었다.&lt;/li&gt;
&lt;li&gt;리스프 사상 최고의 인기를 끌며 현재까지 최고의 점유율을 유지.&lt;/li&gt;
&lt;li&gt;주된 설계 목표는 &lt;strong&gt;다양한 개념을 아우르는 언어&lt;/strong&gt;를 만드는 것이며 이 말은 다양한 프로그래밍 방식을 지원을 뜻한다. 객체 지향 프로그래밍, 함수형 프로그래밍, 제네릭 프로그래밍, 특정 도메인 언어 프로그래밍 등 이 모두 커먼 리스프에서는 막힘없이 지원되고 있다. &lt;strong&gt;다중 프레임 언어&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;앞날이-기대되는-리스프&#34;&gt;앞날이 기대되는 리스프&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;하스켈

&lt;ul&gt;
&lt;li&gt;안시 커먼 리스프와 스킴, 둘 다 완벽히 만족하는 리스프가 없지만 대체 언어로 &lt;strong&gt;하스켈&lt;/strong&gt;이 있다.&lt;/li&gt;
&lt;li&gt;하스켈은 리스프 변종으로 분류되지 않지만 리스퍼 사이에 널리 퍼진 개념을 따른다.&lt;/li&gt;
&lt;li&gt;하스켈은 스킴보다도 더한 고도의 수학적 엄격함을 갖추고 있는데, 이 엄격함은 매우 깔금한 외형 이면에 강력한 기능을 감출 수 있게 한다. &lt;strong&gt;양의 탈을 쓴 늑대&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;클로저

&lt;ul&gt;
&lt;li&gt;자바로 작성&lt;/li&gt;
&lt;li&gt;검증된 수많은 자바 라이브러리를 사용할 수 있다.&lt;/li&gt;
&lt;li&gt;멀티코어 프로그래밍에 유용하다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;아크

&lt;ul&gt;
&lt;li&gt;진정한 리스프&lt;/li&gt;
&lt;li&gt;개발 진도가 매우 느리다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;lisp-맛보기&#34;&gt;LISP 맛보기&lt;/h2&gt;

&lt;p&gt;내 숫자를 맞춰봐 게임.&lt;br /&gt;
마음속으로 1~100사이의 숫자를 정하고 컴퓨터에게 맞추게 하는 게임이다.&lt;/p&gt;


(defparameter *small* 1)
(defparameter *big* 100)
(defun guess-my-number()
    (ash (+ *small* *big*) -1))
(defun smaller ()
    (setf *big* (1- (guess-my-number)))
    (guess-my-number))
(defun bigger ()
    (setf *small* (1+ (guess-my-number)))
    (guess-my-number))
(defun start-over ()
    (defparameter *small* 1)
    (defparameter *big* 100)
    (guess-my-number))


&lt;h3 id=&#34;기본-수칙&#34;&gt;기본 수칙&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;리스프는 괄호로 명령어를 둘러싸야 한다. &lt;strong&gt;이 괄호 없이는 명령어가 실행되지 않는다.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;리스프는 코드를 읽을때, 공백과 줄넘김은 완전히 무시된다.&lt;/li&gt;
&lt;li&gt;그러므로 유연한 형태로 코드를 작성할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;전역변수&#34;&gt;전역변수&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;리스프에서 전역으로 선언된 변수를 &lt;strong&gt;최상위 정의(top-level definition)&lt;/strong&gt;라 부른다. &lt;code&gt;defparameter&lt;/code&gt;함수를 이용해 새로운 최상위 정의를 할 수 있다. (전역변수)&lt;/li&gt;
&lt;li&gt;전역변수 &lt;code&gt;*big*&lt;/code&gt;과 &lt;code&gt;*small*&lt;/code&gt;이름을 둘러싼 &lt;code&gt;*&lt;/code&gt;기호는(귀마개라는 애칭을 사용) 선택 사항이고 마음껏 써도 된다. 리스프는 &lt;code&gt;*&lt;/code&gt; 기호를 변수 이름의 일부분으로 인식하고 이를 무시한다. 리스퍼는 관습처럼 전역변수에 &lt;code&gt;*&lt;/code&gt;기호를 붙여서 지역변수와 구분하기 쉽게 한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;defparameter&lt;/code&gt;는 전역변수에 값을 쓰면 이전에 저장된 모든 값을 덮어쓴다. 전역변수를 정의하는 다른 함수 &lt;code&gt;defvar&lt;/code&gt;는 이전 값을 덮어쓰지 않는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;전역-함수&#34;&gt;전역 함수&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;커먼 리스프에서 함수는 &lt;code&gt;defun&lt;/code&gt; 명령으로 정의한다.&lt;/li&gt;
&lt;li&gt;리스프에서는 return이 필요 없으며, 함수 몸체에서 계산된 마지막 값이 자동으로 반환된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;etc&#34;&gt;etc&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;지역변수와 지역함수를 선언하려면 각각 &lt;code&gt;let&lt;/code&gt;과 &lt;code&gt;flet&lt;/code&gt;명령을 사용한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;labels&lt;/code&gt;함수는 &lt;code&gt;flet&lt;/code&gt;과 비슷하나 함수 자신을 호출할 수 있게 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;referenes&#34;&gt;Referenes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.yes24.com/24/goods/5968810?scode=032&amp;amp;OzSrank=8&#34;&gt;만들면서 배우는 리스프 프로그래밍 : Land of LISP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Making &amp; Testing Multiboot USB</title>
      <link>http://blog.kiyeon.net/2015/11/10/testing-and-making-multi-booting-usb/</link>
      <pubDate>Tue, 10 Nov 2015 23:56:57 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/11/10/testing-and-making-multi-booting-usb/</guid>
      <description>

&lt;h2 id=&#34;개요&#34;&gt;개요&lt;/h2&gt;

&lt;p&gt;요즘은 그렇지 않지만 예전에는 뭔가 OS를 설치할일이 많았다. 특히 Windows는 정기적으로 설치해야하는 일이 빈번했다.&lt;/p&gt;

&lt;p&gt;Windows외에 테스트용 리눅스 서버나 복원용 툴, 고스트, 네트워크 모니터링을 위한 백트랙등 가끔씩 설치할일이 있는데 아무래도 USB로 설치하는게 간편하다. 원래는 부트영역에 한번에 하나만 설치가 가능하고 그래서 OS별로 USB를 준비하던가 그때마다 USB를 포맷하고 새로 설치하는 번거로움이 있다.  이번에 &lt;a href=&#34;https://en.wikipedia.org/wiki/Multi-level_cell&#34;&gt;MLC&lt;/a&gt; 대용량 USB를 구입하면서 남는 용량이 아깝기도 하고 간혹가다 설치를 해줘야할 때도 있고해서 &lt;a href=&#34;https://en.wikipedia.org/wiki/Multiboot_Specification&#34;&gt;멀티부트&lt;/a&gt; USB를 만들기로 했다.&lt;/p&gt;

&lt;h2 id=&#34;준비물&#34;&gt;준비물&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;USB&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.pendrivelinux.com/yumi-multiboot-usb-creator/&#34;&gt;YUMI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OS &lt;a href=&#34;https://en.wikipedia.org/wiki/ISO_image&#34;&gt;Image&lt;/a&gt; File&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Virtual_machine&#34;&gt;가상머신 Tools&lt;/a&gt;(&lt;a href=&#34;http://www.vmware.com/kr&#34;&gt;VMware&lt;/a&gt;,  &lt;a href=&#34;http://www.parallels.com/kr/&#34;&gt;Parallels&lt;/a&gt;, &lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;Virtual Box&lt;/a&gt; &amp;hellip;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.plop.at/en/bootmanager/download.html&#34;&gt;Plop Boot Manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;멀티부트-usb-만들기&#34;&gt;멀티부트 USB 만들기&lt;/h2&gt;

&lt;p&gt;멀티부트 디스크를 만드는 방법은 두가지가 있는데 첫번째는 직접 부트영역을 뜯어고치는 방법과(MBR, GRUB), 멀티부트를 만들어주는 유틸리티를 사용하는 것이다. 당연히 두번째 방법으로 만들것이고, YUMI&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;를 사용할 것이다.&lt;/p&gt;

&lt;h3 id=&#34;1-format&#34;&gt;1. Format&lt;/h3&gt;

&lt;p&gt;USB 부팅은 BIOS에서 지원을 해줘야 하며 BIOS에서 읽을 수 있는 File System으로 포맷을 해야한다. FAT32나 NTFS 두가지를 지원하므로 둘중 하나를 선택해서 USB를 포맷한다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;두 파일 시스템에 장단점이 있는데&amp;hellip; FAT32은 거의 모든 시스템에서 지원하기 때문에 호환성이 좋고 그래서 USB의 성능이 잘 나온다. 하지만 파일당 최고 4GB용량 제한이 있다. NTFS는 파일당 최고 16EB로 사실상 제한이 없긴 하나 호환성이 극히 나쁘다. Windows를 제외한 대부분의 시스템에서 이 파일시스템을 지원하지 않는다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;타 시스템에서 NTFS를 사용하려면 &lt;a href=&#34;http://www.tuxera.com/community/open-source-ntfs-3g/&#34;&gt;ntfs-3g&lt;/a&gt;나 &lt;a href=&#34;https://www.paragon-software.com/home/ntfs-mac/&#34;&gt;Paragon NTFS&lt;/a&gt;를 설치하면 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;ntfs-3g는 무료지만 업데이트가 중단되었는지 제역할을 하지 못한다. 읽기,쓰기 속도를 측정(&lt;a href=&#34;https://itunes.apple.com/kr/app/blackmagic-disk-speed-test/id425264550?mt=12&#34;&gt;Disk Speed Test&lt;/a&gt;)해보면 &lt;code&gt;Write 3 MB/s, Read 20 MB/s&lt;/code&gt;가 나온다.&lt;/p&gt;

&lt;p&gt;Paragon NTFS는 유료지만 제대로 속도가 나온다. &lt;code&gt;Write 120 MB/s, Read 200 MB/s&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;모두 OS X에서 측정했으며 몇가지 더 테스트 해봤다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FAT32 : &lt;code&gt;Write 114 MB/s, Read 202.5 MB/s&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/JFS_(file_system)&#34;&gt;JFS&lt;/a&gt; : &lt;code&gt;Write 130 MB/s, Read 200 MB/s&lt;/code&gt;, OS X에서 사용하는 파일 시스템으로 윈도우에서는 인식하지 못한다.&lt;/li&gt;
&lt;li&gt;ExFAT : &lt;code&gt;Write 100 MB/s, Read 180 MB/s&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;참고로 백업용으로 USB를 사용하려면 4k 쓰기 속도가 좋아야 하는데 내껀 4k쓰기 속도가 거의 0이였다. 조금 좌절했지만 특이한건 JFS나 Ext4를 사용하면 4k 쓰기 속도와 상관없이 엄청난 성능을 발휘한다. NTFS에서는 프리징이 발생한다.(아 MS &amp;hellip;)&lt;/p&gt;

&lt;h3 id=&#34;2-yumi&#34;&gt;2. &lt;a href=&#34;http://www.pendrivelinux.com/yumi-multiboot-usb-creator/&#34;&gt;YUMI&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.pendrivelinux.com/yumi-multiboot-usb-creator/&#34;&gt;YUMI&lt;/a&gt;는 인터페이스가 직관적이여서 사용하기가 쉽다. USB를 선택하고 설치할 OS를 선택하고 Image를 지정하면 바로 설치가 되고 이어서 설치를 하면 멀티부트가 자동으로 만들어진다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&#34;test&#34;&gt;Test&lt;/h2&gt;

&lt;p&gt;멀티부트 USB가 잘만들어졌는지 테스트 해보자.&lt;/p&gt;

&lt;h3 id=&#34;pc에서-테스트&#34;&gt;PC에서 테스트&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;PC에 USB를 꼽는다.(USB 3.0포트에서 인식이 안될 수도 있으니 2.0에서도 해본다)&lt;/li&gt;
&lt;li&gt;파워를 켜고 BIOS나 부트선택메뉴에서 USB를 선택한다.(모델별로 진입키가 다르다. 처음 부팅시 화면에 나오므로 잘보고 키를 누른다)&lt;/li&gt;
&lt;li&gt;멀티부트 메뉴가 나온다면 성공.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;가상머신에서-테스트&#34;&gt;가상머신에서 테스트&lt;/h3&gt;

&lt;p&gt;나는 VMWare를 사용하는데 예전에는 일반PC처럼 부팅시 진입키로 USB를 선택할 수 있었는데 그 메뉴가 사라져서 다른 방법을 사용해야 한다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.plop.at/en/bootmanager/download.html&#34;&gt;Plop Boot Manager&lt;/a&gt;를 다운받아 압축을 해제하면 &lt;code&gt;plpbt.iso&lt;/code&gt;가 있다. VMWare CD-ROM에서 이녀석을 선택하고 부트오더에서 CD-ROM을 최상단에 둔다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:6&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:6&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;전원을 켜면 &lt;code&gt;Plop Boot Manager&lt;/code&gt;가 실행되고 여기서 &lt;code&gt;USB&lt;/code&gt;를 선택하면 USB로 부팅이 된다. USB3.0 포트는 인식을 못한다.(VMware가 못하는건지 Plop이 못하는건지는 모르겠다&amp;hellip;) 2.0포트를 사용해야 한다.&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://web.archive.org/web/20040407211142/aurora.zemris.fer.hr/filesystems/&#34;&gt;Test of six linux filesystems ext2, ext3, jfs, reiserfs, vfat, xfs on linux 2.4.5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.howtogeek.com/73178/what-file-system-should-i-use-for-my-usb-drive/&#34;&gt;What File System Should I Use for My USB Drive?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.microsoft.com/ko-kr/kb/140365&#34;&gt;NTFS, FAT와 exFAT에 대 한 기본 클러스터 크기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;결론&#34;&gt;결론&lt;/h2&gt;

&lt;p&gt;멀티부트 USB 만드는거 참 쉬운데 내가 사용하는 환경이 OS X다 보니 알아볼게 많았다. 파일 시스템 호환과 장단점 USB 메모리 타입과 성능및 속도, 가상머신 테스트 방법&amp;hellip; 참 별거 아닌거 같으면서도 가장 기초적인 부분까지 파고 들 수 있어서 재미있었던거 같다. 이 과정에서 128GB USB를 날렸다. ㅠㅠ 28만개 파일을 백업했는데 바로 인식 불가&amp;hellip;&lt;/p&gt;

&lt;p&gt;참고로&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FAT32와 NTFS의 클러스터 크기에 따라 속도와 효율이 달라진다. 클러스터 크기가 낮으면 저장공간을 아낄 수 있지만 속도가 느려진다. 클러스터 크기가 높으면 속도는 빠른대신 저장공간 낭비가 많아진다.&lt;/li&gt;
&lt;li&gt;우분투를 처음 설치했을때 root 패스워드는 없는 상태이다. &lt;code&gt;sudo passwd root&lt;/code&gt;를 하여 root 패스워드를 지정할 수 있다. 또는 그냥 &lt;code&gt;sudo &amp;lt;command&amp;gt;&lt;/code&gt;를 하면 루트권한으로 커맨드가 실행된다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:5&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:5&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;YUMI말고도 다양한 툴들(&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_tools_to_create_Live_USB_systems&#34;&gt;List of tools to create Live USB systems&lt;/a&gt;)이 있다.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;정확하지는 않다. 경험으로 알게된건데 찾기 귀찮아서&amp;hellip; &amp;ndash;;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Comparison_of_file_systems&#34;&gt;Comparison of file systems&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;&lt;a href=&#34;http://massukr.tistory.com/155&#34;&gt;USB 메모리 하나로 여러 운영체제 설치 - YUMI&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;&lt;a href=&#34;http://prolite.tistory.com/165&#34;&gt;VMware USB 부팅 하기&amp;hellip; 첫번째 방법&amp;hellip;&lt;/a&gt;, &lt;a href=&#34;http://prolite.tistory.com/166&#34;&gt;VMware USB 부팅 하기&amp;hellip; 두번째 방법&amp;hellip;&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:6&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;&lt;a href=&#34;http://askubuntu.com/a/434956&#34;&gt;What is the default root password when was never set at installation time?&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:5&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Command line에서 java 작성하고 실행하기</title>
      <link>http://blog.kiyeon.net/2015/06/25/command-lineeseo-java-jagseonghago-silhaenghagi/</link>
      <pubDate>Thu, 25 Jun 2015 14:27:21 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/25/command-lineeseo-java-jagseonghago-silhaenghagi/</guid>
      <description>&lt;p&gt;이상하게도 java는 이클립스가 없이는 사용하기가 힘들다. 이클립스에 너무 익숙해져서 그럴지도 모르겠다. 간단하게 command line상에서 java를 작성하고 컴파일하고 실행해보자.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;writing-code&#34;&gt;Writing code&lt;/h2&gt;

&lt;p&gt;Main class인 HelloWorld.java와 Library class인 Common.java를 만들어 compile과 package, import의 연관관계도 살펴보자.
``` java HelloWorld.java
package net.kiyeon;&lt;/p&gt;

&lt;p&gt;import net.kiyeon.lib.Common;&lt;/p&gt;

&lt;p&gt;public class HelloWorld
{
  public static void main(String args[])
  {
    Common.println(&amp;ldquo;Hello World!&amp;rdquo;);
  }
}&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
``` java Common.java
package net.kiyeon.lib;

public class Common
{
  public static void println(String str)
  {
    System.out.println(str);
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;compile&#34;&gt;Compile&lt;/h2&gt;

&lt;p&gt;Compile은 &lt;code&gt;javac&lt;/code&gt;를 사용하며 라이브러리를 먼저 컴파일한다. 이때 &lt;code&gt;-d .&lt;/code&gt;옵션을 줘야 package대로 폴더가 생성된다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% javac -d . Common.java
% tree
.
├── Common.java
├── HelloWorld.java
└── net
    └── kiyeon
        └── lib
            └── Common.class
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;다음으로 main class를 compile한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% javac -d . HelloWorld.java
% tree
.
├── Common.java
├── HelloWorld.java
└── net
    └── kiyeon
        ├── HelloWorld.class
        └── lib
            └── Common.class
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;run&#34;&gt;Run&lt;/h2&gt;

&lt;p&gt;실행해보자.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% java net.kiyeon.HelloWorld
Hello World!
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;jar&#34;&gt;Jar&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/deployment/jar/build.html&#34;&gt;JAR&lt;/a&gt;(Java Archive, 자바 아카이브)는 소프트웨어에서 수많은 자바 클래스 파일과 연관 메타데이터, 리소스(텍스트, 그림 등)을 하나의 파일로 모아서 자바 플랫폼에 응용 소프트웨어나 라이브러리를 배포하기 위한 패키지 파일 포맷이다. - &lt;a href=&#34;https://ko.wikipedia.org/wiki/JAR_(%ED%8C%8C%EC%9D%BC_%ED%8F%AC%EB%A7%B7)&#34;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/deployment/jar/build.html&#34;&gt;jar&lt;/a&gt;를 만들기 위해서는 &lt;code&gt;manifest.mf&lt;/code&gt;가 필요한데 특별히 지정할 값이 없다면 jar가 디폴트로 생성한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% jar cvf myprogram.jar net
added manifest
adding: net/(in = 0) (out= 0)(stored 0%)
adding: net/kiyeon/(in = 0) (out= 0)(stored 0%)
adding: net/kiyeon/lib/(in = 0) (out= 0)(stored 0%)
adding: net/kiyeon/lib/Common.class(in = 382) (out= 272)(deflated 28%)
adding: net/kiyeon/HelloWorld.class(in = 374) (out= 262)(deflated 29%)

% ls
Common.java  HelloWorld.java  myprogram.jar  net
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;myprogram.jar가 만들어졌다. 실행할때 &lt;code&gt;-cp&lt;/code&gt; 옵션을 사용해야한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% java -cp myprogram.jar net.kiyeon.HelloWorld
Hello World!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;간편하게 실행시키려면 manifest.mf에 main-class를 지정하고 jar로 묶은뒤 java로 실행할때 &lt;code&gt;-jar&lt;/code&gt;옵션을 주면 된다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% echo main-class: net.kiyeon.HelloWorld &amp;gt; manifest.mf

% jar cvmf manifest.mf myprogram.jar net
added manifest
adding: myprogram.jar(in = 1455) (out= 919)(deflated 36%)
adding: net/(in = 0) (out= 0)(stored 0%)
adding: net/kiyeon/(in = 0) (out= 0)(stored 0%)
adding: net/kiyeon/lib/(in = 0) (out= 0)(stored 0%)
adding: net/kiyeon/lib/Common.class(in = 382) (out= 272)(deflated 28%)
adding: net/kiyeon/HelloWorld.class(in = 374) (out= 262)(deflated 29%)

% java -jar myprogram.jar
Hello World!
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;jar에서-외부-jar-참조&#34;&gt;Jar에서 외부 Jar 참조&lt;/h2&gt;

&lt;p&gt;결론부터 말하자면 Jar안에 외부 Jar를 묶어 참조할 수 없다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: The Class-Path header points to classes or JAR files on the local network, not JAR files within the JAR file or classes accessible over Internet protocols. To load classes in JAR files within a JAR file into the class path, you must write custom code to load those classes. For example, if MyJar.jar contains another JAR file called MyUtils.jar, you cannot use the Class-Path header in MyJar.jar&amp;rsquo;s manifest to load classes in MyUtils.jar into the class path. - &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/deployment/jar/downman.html&#34;&gt;java documentation&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;외부 Jar를 함께 묶고 싶다면 압축을 푼후 Jar하나로 묶어 참조하거나 MANIFEST.MF에 &lt;code&gt;Class-Path&lt;/code&gt;를 지정하거나 (MANIFEST.MF에서 Class-Path는 Main-Class가 있는 폴더의 상대경로로 지정한다.)
``` java MANIFEST.MF
Manifest-Version: 1.0
Created-By: 1.7.0_06 (Oracle Corporation)
Main-Class: net.kiyeon.HelloWorld
Class-Path: lib/ojdbc6.jar&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
java실행시 `-cp`옵션으로 classpath를 함께 지정하는 것이다. classpath지정시 윈도우는 `;`를 구분자로 사용하고 리눅스계열은 `:`를 구분자로 사용한다.
``` bash
% java -cp ./lib/ojdbc6.jar:myprogram.jar net.kiyeon.HelloWorld
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/deployment/jar/manifestindex.html&#34;&gt;Working with Manifest Files: The Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kkpaidi.wordpress.com/2013/07/15/difference-between-jar-war-and-ear-files/&#34;&gt;Difference between JAR, WAR and EAR files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://geekexplains.blogspot.kr/2008/06/jar-war-and-ear-what-are-these-files.html&#34;&gt;JAR, WAR, and EAR - what are these files used for?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;cli-programming-library&#34;&gt;CLI Programming library&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jcommander.org/&#34;&gt;JCommander&lt;/a&gt; - Because life is too short to parse command line parameters&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://commons.apache.org/proper/commons-cli/&#34;&gt;Commons CLI&lt;/a&gt; - The Apache Commons CLI library provides an API for parsing command line options passed to programs. It&amp;rsquo;s also able to print help messages detailing the options available for a command line tool.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://commons.apache.org/proper/commons-io/&#34;&gt;Commons IO&lt;/a&gt; - Commons IO is a library of utilities to assist with developing IO functionality.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;&lt;a href=&#34;http://veenvalu.tistory.com/14&#34;&gt;외부 라이브러리를 포함한 JAR파일 만들기&lt;/a&gt;, &lt;a href=&#34;http://blog.cjred.net/164&#34;&gt;Jar 생성시 dependency 라이브러리 처리(포함)하기&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Change locale in linux</title>
      <link>http://blog.kiyeon.net/2015/06/24/change-locale-in-linux/</link>
      <pubDate>Wed, 24 Jun 2015 09:28:08 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/24/change-locale-in-linux/</guid>
      <description>&lt;p&gt;Locale은 &lt;strong&gt;&amp;lsquo;지역, 언어&amp;rsquo;&lt;/strong&gt;정보로 프로그램은 입/출력시 사용자가 설정한 locale에 따라 인코딩을 적용하여 메세지를 출력한다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&#34;현재값&#34;&gt;현재값&lt;/h2&gt;

&lt;p&gt;현재 설정값을 보려면 &lt;strong&gt;&lt;a href=&#34;http://man.he.net/?topic=locale&amp;amp;section=all&#34;&gt;locale&lt;/a&gt;&lt;/strong&gt;을 사용한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% locale
LANG=en_US.utf8                # LC_* 값들을 설정하지 않았을때 적용되는 기본 값
LANGUAGE=
LC_CTYPE=&amp;quot;en_US.utf8&amp;quot;          # Character classification and case conversion.
LC_NUMERIC=&amp;quot;en_US.utf8&amp;quot;        # Non-monetary numeric formats.
LC_TIME=&amp;quot;en_US.utf8&amp;quot;           # Date and time formats.
LC_COLLATE=&amp;quot;en_US.utf8&amp;quot;        # Collation order(알파벳 정렬과 관련된 규칙).
LC_MONETARY=&amp;quot;en_US.utf8&amp;quot;       # Monetary formats.
LC_MESSAGES=&amp;quot;en_US.utf8&amp;quot;       # Formats of informative and diagnostic messages and interactive responses.
LC_PAPER=&amp;quot;en_US.utf8&amp;quot;          # Paper size.
LC_NAME=&amp;quot;en_US.utf8&amp;quot;           # Name formats(이름 표기 형식. first name, last name).
LC_ADDRESS=&amp;quot;en_US.utf8&amp;quot;        # Address formats and location information.
LC_TELEPHONE=&amp;quot;en_US.utf8&amp;quot;      # Telephone number formats.
LC_MEASUREMENT=&amp;quot;en_US.utf8&amp;quot;    # Measurement units (Metric or Other).
LC_IDENTIFICATION=&amp;quot;en_US.utf8&amp;quot; # Metadata about the locale information.
LC_ALL=                        # LC_*의 값들이 override 된다.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
Locale은 다음과 같은 포맷으로 정의된다.
&lt;code&gt;&amp;lt;lang&amp;gt;_&amp;lt;territory&amp;gt;.&amp;lt;codeset&amp;gt;[@&amp;lt;modifiers&amp;gt;]&lt;/code&gt; = &lt;code&gt;en_US.utf8&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;변경-가능한-목록&#34;&gt;변경 가능한 목록&lt;/h2&gt;

&lt;p&gt;변경 가능한 값을 보려면 &lt;strong&gt;&lt;a href=&#34;http://man.he.net/?topic=locale&amp;amp;section=all&#34;&gt;locale&lt;/a&gt; -a&lt;/strong&gt; or &lt;strong&gt;&lt;a href=&#34;http://man.he.net/?topic=localedef&amp;amp;section=all&#34;&gt;localedef&lt;/a&gt; &amp;ndash;list-archive&lt;/strong&gt;를 사용한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% locale -a
C
C.UTF-8
en_US.utf8
POSIX

% localedef --list-archive
en_US.utf8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;locale데이터는 &lt;code&gt;/usr/lib/locale/locale-archive&lt;/code&gt; 파일에 기록되는데 위 커맨드는 이 아카이브파일에 저장된 목록을 보여준다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% ls -lh /usr/lib/locale/locale-archive
-rw-r--r-- 1 root root 1.3M Jun 24 10:22 /usr/lib/locale/locale-archive
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;지원하는-목록&#34;&gt;지원하는 목록&lt;/h2&gt;

&lt;p&gt;시스템에서 지원하는 목록은 &lt;code&gt;/usr/share/i18n/SUPPORTED&lt;/code&gt;에 기록되어있다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% cat /usr/share/i18n/SUPPORTED | wc -l
457


% cat /usr/share/i18n/SUPPORTED
# This file names the currently supported and somewhat tested locales.
# If you have any additions please file a glibc bug report.
aa_DJ.UTF-8 UTF-8
aa_DJ ISO-8859-1
aa_ER UTF-8
aa_ER@saaho UTF-8
aa_ET UTF-8
af_ZA.UTF-8 UTF-8
af_ZA ISO-8859-1
am_ET UTF-8
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;locale-추가&#34;&gt;Locale 추가&lt;/h2&gt;

&lt;p&gt;지원하는 Locale을 추가할 수 있으며 추가하게 되면 &lt;code&gt;/usr/lib/locale/locale-archive&lt;/code&gt;에 기록이 된다. 추가할때는 &lt;strong&gt;&lt;a href=&#34;http://man.he.net/?topic=locale-gen&amp;amp;section=all&#34;&gt;locale-gen&lt;/a&gt;&lt;/strong&gt;을 사용한다. 지원하는 Locale 목록을 보고 루트권한으로 추가한다. 여기서는 한국어와 프랑스어를 추가한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% cat /usr/share/i18n/SUPPORTED | grep -Ei &#39;(ko_kr|fr_fr)&#39;
fr_FR.UTF-8 UTF-8
fr_FR ISO-8859-1
fr_FR@euro ISO-8859-15
ko_KR.EUC-KR EUC-KR
ko_KR.UTF-8 UTF-8


% sudo locale-gen ko_KR.utf8 fr_FR.utf8
Generating locales...
  fr_FR.UTF-8... done
  ko_KR.UTF-8... done
Generation complete.


% ls -lh /usr/lib/locale/locale-archive
-rw-r--r-- 1 root root 2,8M juin  24 11:26 locale-archive # 용량이 늘어났다.


% localedef --list-archive # 2개의 locale이 추가되었다.
en_US.utf8
fr_FR.utf8
ko_KR.utf8
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;사용&#34;&gt;사용&lt;/h2&gt;

&lt;p&gt;추가된 Locale을 사용하려면 환경변수 &lt;code&gt;LANG&lt;/code&gt;에 해당 Locale을 지정하면 된다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% export LANG=fr_FR.utf8


% locale
LANG=fr_FR.utf8
LANGUAGE=
LC_CTYPE=&amp;quot;fr_FR.utf8&amp;quot;
LC_NUMERIC=&amp;quot;fr_FR.utf8&amp;quot;
LC_TIME=&amp;quot;fr_FR.utf8&amp;quot;
LC_COLLATE=&amp;quot;fr_FR.utf8&amp;quot;
LC_MONETARY=&amp;quot;fr_FR.utf8&amp;quot;
LC_MESSAGES=&amp;quot;fr_FR.utf8&amp;quot;
LC_PAPER=&amp;quot;fr_FR.utf8&amp;quot;
LC_NAME=&amp;quot;fr_FR.utf8&amp;quot;
LC_ADDRESS=&amp;quot;fr_FR.utf8&amp;quot;
LC_TELEPHONE=&amp;quot;fr_FR.utf8&amp;quot;
LC_MEASUREMENT=&amp;quot;fr_FR.utf8&amp;quot;
LC_IDENTIFICATION=&amp;quot;fr_FR.utf8&amp;quot;
LC_ALL=


% date
mercredi 24 juin 2015, 21:35:59 (UTC+0900)


% export LANG=ko_KR.utf8
% date
2015. 06. 24. (수) 21:40:54 KST
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;삭제&#34;&gt;삭제&lt;/h2&gt;

&lt;p&gt;추가된 Locale을 삭제할때는 &lt;code&gt;locale-gen --purge&lt;/code&gt;를 사용하며 이때 인자로 주어진 Locale을 제외한 모든 Locale이 삭제된다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% sudo locale-gen --purge en_US.utf8 ko_KR.utf8
Generating locales...
  en_US.UTF-8... done
  ko_KR.UTF-8... done
Generation complete.

% localedef --list-archive
en_US.utf8
ko_KR.utf8
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;시스템-기본값-설정&#34;&gt;시스템 기본값 설정&lt;/h2&gt;

&lt;p&gt;locale을 시스템 기본값으로 변경하려면 &lt;code&gt;/etc/default/locale&lt;/code&gt;에서 &lt;code&gt;LANG&lt;/code&gt;의 값을 변경한후 리부팅을 하면 된다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% cat /etc/default/locale
# Created by cloud-init v. 0.7.5 on Wed, 10 Dec 2014 23:55:44 +0000
LANG=&amp;quot;en_US.UTF-8&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;정리&#34;&gt;정리&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://man.he.net/?topic=locale&amp;amp;section=all&#34;&gt;locale&lt;/a&gt;, &lt;a href=&#34;http://man.he.net/?topic=localedef&amp;amp;section=all&#34;&gt;localedef&lt;/a&gt; - locale 조회&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://man.he.net/?topic=locale-gen&amp;amp;section=all&#34;&gt;locale-gen&lt;/a&gt; - locale 추가, 제거(&amp;ndash;purge)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/share/i18n/SUPPORTED&lt;/code&gt; - locale 지원 목록&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/lib/locale/locale-archive&lt;/code&gt; - 추가된 실제 locale archive&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/default/locale&lt;/code&gt; - 시스템 기본 locale&lt;/li&gt;
&lt;li&gt;&lt;code&gt;export LANG=ko_KR.UTF-8&lt;/code&gt; - locale 적용&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.shellhacks.com/en/HowTo-Change-Locale-Language-and-Character-Set-in-Linux&#34;&gt;HowTo : Change Locale (Language and Character Set) in Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://askubuntu.com/a/58200&#34;&gt;How can I uninstall a locale via command-line?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;&lt;a href=&#34;https://ko.wikipedia.org/wiki/%EB%A1%9C%EC%BC%80%EC%9D%BChttps://ko.wikipedia.org/wiki/%EB%A1%9C%EC%BC%80%EC%9D%BC&#34;&gt;Locale at Wikipedia&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Curses Library</title>
      <link>http://blog.kiyeon.net/2015/06/19/curses-library/</link>
      <pubDate>Fri, 19 Jun 2015 11:10:32 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/19/curses-library/</guid>
      <description>&lt;p&gt;콘솔을 좋아하는 이유? 심플하기때문에&amp;hellip; 가볍고 빠르고 어디서든 사용할 수 있다는점.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://ko.wikipedia.org/wiki/Curses&#34;&gt;curses&lt;/a&gt;는 유닉스 계열 운영체제를 위한 터미널 제어 라이브러리의 하나로, 텍스트 사용자 인터페이스(TUI) 응용 프로그램의 구성을 가능케 한다. 이 이름은 &amp;ldquo;커서 최적화&amp;rdquo;(cusor optimization)에서 따온 것이다. 문자 셀 터미널(VT100 따위) 상에서 응용 프로그램의 디스플레이를 관리하는 명령들이 모인 라이브러리이다. - wikipedia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/1/11/Jack-curses-screen.gif&#34; alt=&#34;screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;콘솔에 머무르는 시간이 많다보니 필요한 정보들을 한 화면에서 제어하고 싶었고 그럴때 필요한 curses라이브러리를 찾아봤다.&lt;/p&gt;

&lt;h2 id=&#34;java-curses-library-1-2&#34;&gt;Java Curses Library&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;  &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.pitman.co.za&#34;&gt;Charva&lt;/a&gt; - A Java Windowing Toolkit for Text Terminals.

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.pitman.co.za/projects/charva/api/index.html&#34;&gt;Charva API documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sourceforge.net/projects/javacurses/&#34;&gt;Java Curses Library&lt;/a&gt; - JCurses, a java console windowing toolkit for Windows and Linux&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.google.com/p/blacken/&#34;&gt;Blacken&lt;/a&gt; - Blacken is a library which provides an enhanced console-like interface.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.google.com/p/lanterna/&#34;&gt;Lanterna&lt;/a&gt; - Lanterna is a Java library allowing you to write easy semi-graphical user interfaces in a text-only environment, very similar to the C library curses but with more functionality.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;shell-curses-library&#34;&gt;Shell Curses Library&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ibm.com/developerworks/aix/library/au-shellcurses/#resources&#34;&gt;Shell Curses function library&lt;/a&gt; - &amp;ldquo;Shell Curses&amp;rdquo; is a library of script functions that provide the shell programmer the ability to perform text-based cursor movements to specified locations on the screen.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.google.com/p/bashsimplecurses/&#34;&gt;Bashsimplecurses&lt;/a&gt; - Create simple ncurses windows with bash&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hightek.org/projects/dialog/&#34;&gt;Dialog&lt;/a&gt; - Dialog is a utility to create nice user interfaces to shell scripts, or other scripting languages, such as perl. It is non-graphical (it uses curses) so it can be run in the console or an xterm. There are also graphical Xwindows versions mentioned below.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;&lt;a href=&#34;http://www.drdobbs.com/open-source/curses-in-java/228700553&#34;&gt;Curses in Java&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;&lt;a href=&#34;http://stackoverflow.com/q/439799&#34;&gt;What&amp;rsquo;s a good Java, curses-like, library for terminal applications?&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Windows Batch Scripting</title>
      <link>http://blog.kiyeon.net/2015/06/17/windows-batch-scripting/</link>
      <pubDate>Wed, 17 Jun 2015 09:42:37 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/17/windows-batch-scripting/</guid>
      <description>&lt;p&gt;MS의 DOS로 시작해 Windows를 거쳐 유닉스와 리눅스를 만나고 이제는 유닉스(Mac)에 정착했다. 하지만 여전히 일선상에서는 Windows를 벗어나지 못하고 있다. 로컬OS는 Windows를 사용하지만 대부분 서비스를 이용하기위한(업무환경) 수단일뿐 실제 개발은 리눅스상에서 더 많이 한다. 좋든 실든 업무효율성을 높이기 위해 다양한 유틸리티와 Script가 필요하다.&lt;/p&gt;

&lt;p&gt;여러대의 서버로 파일을 업로드하는 간단한 스크립트를 살펴보며 Window Batch Script를 알아보자.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;echoing-off와-주석&#34;&gt;Echoing off와 주석&lt;/h2&gt;

&lt;p&gt;Windows Batch Script를 실행하면 Command가 화면에 함께 출력된다. 좀 특이하지만 이런 출력을 &lt;code&gt;echo on/off&lt;/code&gt;로 제어할 수 있다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;  &lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/echo.mspx&#34;&gt;echo&lt;/a&gt;자체도 command이므로 앞에 &lt;code&gt;@&lt;/code&gt;를 붙여줘서 &lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/echo.mspx&#34;&gt;echo&lt;/a&gt;역시 화면에 출력되지 않게 한다.&lt;/p&gt;

&lt;p&gt;newline을 출력하려면 &lt;code&gt;echo.&lt;/code&gt;을 사용한다.&lt;/p&gt;

&lt;p&gt;주석은 &lt;code&gt;::&lt;/code&gt;를 사용한다. &lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/rem.mspx&#34;&gt;REM&lt;/a&gt;을 사용할 수도있지만 &lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/rem.mspx&#34;&gt;REM&lt;/a&gt;은 &lt;code&gt;echo on/off&lt;/code&gt;에 영향을 받는다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-batch&#34;&gt;:: command echoing을 off한다. 앞에 @는 echo자체 역시 화면에 출력하지 않도록 한다.
@echo off
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;변수&#34;&gt;변수&lt;/h2&gt;

&lt;p&gt;변수를 설정할때는 &lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/set.mspx&#34;&gt;SET&lt;/a&gt;을 사용하며 변수명과 값사이는 공백이 들어가면 안된다. 사용할때는 &lt;code&gt;%변수명%&lt;/code&gt;처럼 변수명 양옆을 &lt;code&gt;%&lt;/code&gt;로 감싼다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-batch&#34;&gt;set ID=kiyeon
set PW=niceguy
set TODAY=%date:~0,4%%date:~5,2%%date:~8,2%
set SRCFILE=c:/dump.zip
set DSTFILE=./dump_%TODAY%.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikibooks.org/wiki/Windows_Batch_Scripting#DATE&#34;&gt;date&lt;/a&gt;는 시스템의 시간을 출력하는데 Script내에서 &lt;code&gt;%date%&lt;/code&gt;로 사용할 수 있으며&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:8&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:8&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; 출력포맷을 지정하고 싶다면 &lt;code&gt;set isodate=%date:~0,4%%date:~5,2%%date:~8,2%&lt;/code&gt;처럼 사용한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-batch&#34;&gt;set isodate=%date:~0,4%%date:~5,2%%date:~8,2%
echo %isodate%
20150617
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;배열과-루프&#34;&gt;배열과 루프&lt;/h2&gt;

&lt;p&gt;Batch script는 배열을 지원하지 않는다. 하지만 아래와 같은 꼼수로 배열처럼 사용할 수 있다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;루프는 &lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/for.mspx&#34;&gt;for&lt;/a&gt;문이 있으며 값이 대입되는 변수의 명은 한자리 알파벳이여야 한다. &lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/goto.mspx&#34;&gt;goto&lt;/a&gt;와 &lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/if.mspx&#34;&gt;if&lt;/a&gt;문을 응용할 수도 있다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;이 예제에서는 &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34;&gt;PuTTY&lt;/a&gt;에서 제공하는 &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html&#34;&gt;pscp&lt;/a&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:5&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:5&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;와 &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html&#34;&gt;plink&lt;/a&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:6&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:6&#34;&gt;7&lt;/a&gt;&lt;/sup&gt;를 사용한다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;goto :eof&lt;/code&gt;(end of file)는 스크립트의 마지막으로 간다. 즉 스크립트를 종료한다. 함수를 스크립트 파일 하단에 위치시키는데 이 구문이 없으면 하단에 있는 명령들을 모두 실행하고 스크립트가 종료하게 된다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-batch&#34;&gt;set IP[01]=0.0.0.1
set IP[02]=0.0.0.2
set IP[03]=0.0.0.3
set IP[04]=0.0.0.4

call :alert Upload dump file ...
:: echo %result% 

for /F &amp;quot;tokens=2 delims==&amp;quot; %%v in (&#39;set IP[&#39;) do (
  pscp -pw %PW% %SRCFILE% %ID%@%%v:%DSTFILE%
  call :result %%v

  plink -pw %PW% -batch %ID%@%%v chmod 700 %DSTFILE%
  call :result %%v
)

call :alert Finished upload.
goto :eof
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;함수&#34;&gt;함수&lt;/h2&gt;

&lt;p&gt;함수역시 일반적인 프로그래밍언어에서 사용하는 방식과 다르게 &lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/call.mspx&#34;&gt;call&lt;/a&gt;, labels, &lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/setlocal.mspx&#34;&gt;setlocal&lt;/a&gt;, &lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/endlocal.mspx&#34;&gt;endlocal&lt;/a&gt;을 이용하여 함수처럼 사용한다.&lt;/p&gt;

&lt;p&gt;함수는 스크립트 파일의 하단에 위치시키고, 인자는 &lt;code&gt;%1 %2&lt;/code&gt;처럼 사용한다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/exit.mspx&#34;&gt;exit&lt;/a&gt;는 batch script를 종료하거나 cmd.exe program을 종료시킨다. &lt;code&gt;/b&lt;/code&gt;옵션과 함께 사용하면 현재 batch script를 종료한다. &lt;code&gt;/b&lt;/code&gt;옵션과함께 &lt;code&gt;ExitCode&lt;/code&gt;를 사용하면 &lt;a href=&#34;https://en.wikibooks.org/wiki/Windows_Batch_Scripting#Special_names&#34;&gt;ERRORLEVEL&lt;/a&gt;에 &lt;code&gt;ExitCode&lt;/code&gt;가 지정되어 call function의 성공 유무를 체크할 수 있다. &lt;code&gt;%ERRORLEVEL%&lt;/code&gt;은 마지막으로 실행된 명령 또는 배치스크립트의  &lt;a href=&#34;https://en.wikibooks.org/wiki/Windows_Batch_Scripting#Error_level&#34;&gt;error level&lt;/a&gt;을 리턴한다.&lt;/p&gt;

&lt;p&gt;return value를 전달하는 기능은 없지만 역시 꼼수로 변수에 리턴값을 지정해 사용할 수 있다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:7&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:7&#34;&gt;8&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/setlocal.mspx&#34;&gt;setlocal&lt;/a&gt;과 &lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/endlocal.mspx&#34;&gt;endlocal&lt;/a&gt;로 함수내에서 사용된 변수를 지역화할 수 있다.&lt;/p&gt;

&lt;p&gt;함수의 호출은 &lt;code&gt;call :label&lt;/code&gt;로 한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-batch&#34;&gt;:alert
setlocal
  echo ##########################################################
  echo ## %*
  echo ##########################################################
  pause
endlocal &amp;amp; set result=end of alert
exit /b 0

:result
setlocal
  if %errorlevel% neq 0 (
    echo Failed upload to the %1. Errorlevel:%errorlevel%
  ) else (
    echo Completed upload to the %1. Errorlevel:%errorlevel%
  )
endlocal &amp;amp; set result=end of result
exit /b 0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;재사용&#34;&gt;재사용&lt;/h2&gt;

&lt;p&gt;공통으로 사용할 수 있는 설정및 함수를 따로 파일로 분리한뒤 &lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/call.mspx&#34;&gt;call&lt;/a&gt;로 재사용할 수 있다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:9&#34;&gt;9&lt;/a&gt;&lt;/sup&gt; 위 예제를 재구성 해보자.
``` batch sendfile.cmd
@echo off
call config.cmd
set SRCFILE=c:/dump.zip
set DSTFILE=./dump_%TODAY%.zip&lt;/p&gt;

&lt;p&gt;call function_alert.cmd Upload dump file &amp;hellip;&lt;/p&gt;

&lt;p&gt;for /F &amp;ldquo;tokens=2 delims==&amp;rdquo; %%v in (&amp;lsquo;set IP[&amp;lsquo;) do (
  pscp -pw %PW% %SRCFILE% %ID%@%%v:%DSTFILE%
  call function_result.cmd %%v&lt;/p&gt;

&lt;p&gt;plink -pw %PW% -batch %ID%@%%v chmod 700 %DSTFILE%
  call function_result.cmd %%v
)&lt;/p&gt;

&lt;p&gt;call function_alert.cmd Finished upload.
goto :eof&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
``` batch config.cmd
set ID=kiyeon
set PW=niceguy
set IP[01]=0.0.0.1
set IP[02]=0.0.0.2
set IP[03]=0.0.0.3
set IP[04]=0.0.0.4
set TODAY=%date:~0,4%%date:~5,2%%date:~8,2%
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;``` batch function_alert.cmd
:alert
setlocal
  echo ##########################################################
  echo ## %*
  echo ##########################################################
  pause
endlocal &amp;amp; set result=end of alert
exit /b 0&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
``` batch function_result.cmd
:result
setlocal
  if %errorlevel% neq 0 (
    echo Failed upload to the %1. Errorlevel:%errorlevel%
  ) else (
    echo Completed upload to the %1. Errorlevel:%errorlevel%
  )
endlocal &amp;amp; set result=end of result
exit /b 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;여러대의 서버에 파일을 업로드하는 간단한 스크립트를 만들어 봤다.&lt;/p&gt;

&lt;p&gt;여기서는 변수의 선언과 배열방식으로의 사용 반복문과 함수, 조건문과 외부 유틸리티를 사용하고 상호 동작하는 방법도 엿볼 수 있다.&lt;/p&gt;

&lt;p&gt;Windows의 Batch Script는 낯설지만 윈도우 환경에서 간편하게 사용하기에 괜찮은거 같다. 이상하지만 재미난 스크립트다.&lt;/p&gt;

&lt;p&gt;좀더 제대로 사용하려면 &lt;a href=&#34;https://www.cygwin.com/&#34;&gt;Cygwin&lt;/a&gt;을 이용한 쉘스크립팅이나 &lt;a href=&#34;https://en.wikipedia.org/wiki/Windows_PowerShell&#34;&gt;Power Shell&lt;/a&gt;이 있다.&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikibooks.org/wiki/Windows_Batch_Scripting&#34;&gt;Windows Batch Scripting&lt;/a&gt; at wikibooks&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ss64.com/nt/&#34;&gt;An A-Z Index of the Windows CMD command line&lt;/a&gt; at ss64&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/ntcmds.mspx?mfr=true&#34;&gt;Command-line reference A-Z&lt;/a&gt; at the Microsoft&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://steve-jansen.github.io/guides/windows-batch-scripting/index.html&#34;&gt;Guide to Windows Batch Scripting&lt;/a&gt; by steve jansen&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.csie.ntu.edu.tw/~r92092/ref/win32/win32scripting.html&#34;&gt;Win32 Shell Scripting Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:2&#34;&gt;&lt;a href=&#34;http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/echo.mspx&#34;&gt;If you use echo off, the command prompt does not appear on your screen. To prevent echoing of a line, insert an at sign (@) in front of a command in a batch program.&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:1&#34;&gt;&lt;a href=&#34;https://en.wikibooks.org/wiki/Windows_Batch_Scripting#REM&#34;&gt;A comment command. Unlike double-colon (::), the command can be executed.&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:8&#34;&gt;&lt;a href=&#34;https://en.wikibooks.org/wiki/Windows_Batch_Scripting#Special_names&#34;&gt;Special names&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:8&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;&lt;a href=&#34;https://helloacm.com/how-to-use-array-in-windows-batch-programming/&#34;&gt;How to Use Array in Windows Batch Programming?&lt;/a&gt;, &lt;a href=&#34;http://stackoverflow.com/a/18480952&#34;&gt;How to loop through array in batch?&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;&lt;a href=&#34;http://stackoverflow.com/a/25791900&#34;&gt;http://stackoverflow.com/a/25791900&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;command line에서 secure file copy를 지원하는 SCP client다.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:5&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;command line connection utility로 host로 command를 실행할 수 있다.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:6&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:7&#34;&gt;&lt;a href=&#34;https://en.wikibooks.org/wiki/Windows_Batch_Scripting#Functions&#34;&gt;Functions&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:7&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:9&#34;&gt;&lt;a href=&#34;http://stackoverflow.com/a/2763907&#34;&gt;Batch file include external file for variables&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>History Command</title>
      <link>http://blog.kiyeon.net/2015/06/12/history-command/</link>
      <pubDate>Fri, 12 Jun 2015 11:35:51 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/12/history-command/</guid>
      <description>&lt;p&gt;Command line에서 명령을 실행하면 해당 명령이 기록에 남는다. 이 기록을 살펴보는 명령이 &lt;code&gt;history&lt;/code&gt;다.&lt;/p&gt;

&lt;h2 id=&#34;설정&#34;&gt;설정&lt;/h2&gt;

&lt;p&gt;이 설정은 bash기준이며 다른 쉘에서는 약간 다를 수 있다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export HISTTIMEFORMAT=&#39;%F %T &#39;              # 로그에 날짜와 시간 출력
export HISTIGNORE=&amp;quot;pwd:ls:ls -ltr:&amp;quot;         # pwd, ls, ls -ltr명령은 로그에 기록하지 않는다.
export HISTCONTROL=ignorespace              # 명령 실행시 처음 스페이스가 포함되면 로그에 기록하지 않는다.
export HISTCONTROL=ignoredups               # 명령이 중복되면 무시 (pwd를 연속으로 여러번 입력하면 로그에는 pwd하나만 기록된다)
export HISTCONTROL=erasedups                # 중복로그를 삭제하고 최근로그만 남긴다.
export HISTSIZE=450                         # 저장할 로그 개수 지정 (0을 지정하면 history 기능이 disable된다)
export HISTFILESIZE=450                     # 저장할 로그 개수 지정
export HISTFILE=/root/.commandline_warrior  # 히스토리 로그 파일 변경
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;사용&#34;&gt;사용&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Ctrl+R&lt;/code&gt;을 사용하여 history명령을 활용할 수 있다. Enter를 치면 검색한 명령이 수행된다. Backspace로 검색어를 삭제한뒤 재검색할 수 있다. 수정이 필요하면 esc나 화살키를 사용한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Ctrl+R
(reverse-i-search)`&#39;: 
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;키보드의 &lt;code&gt;Up키&lt;/code&gt;나 &lt;code&gt;Down키&lt;/code&gt; 또는 &lt;code&gt;Ctrl+P&lt;/code&gt;나 &lt;code&gt;Ctrl+N&lt;/code&gt;으로 이전명령 다음명령을 선택하여 재실행 할 수 있다.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;!!&lt;/code&gt; or &lt;code&gt;!-1&lt;/code&gt; 바로 이전 명령을 재실행 한다.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;![no]&lt;/code&gt;로 history number에 해당하는 명령을 재실행 한다.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;![keyword]&lt;/code&gt;로 가장 최근의 키워드로 검색하여 재실행한다.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;vi !!:$&lt;/code&gt; 이전명령의 마지막 인자 활용&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;vi !!:[no]&lt;/code&gt; 이전명령의 [no]인자 활용&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;vi !^&lt;/code&gt; 이전명령의 첫번째 인자 활용&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;ls -l !cp:2&lt;/code&gt; 최근 사용한 cp명령의 두번째 인자 활용&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;history 53&lt;/code&gt; 53부터 마지막까지 로그 출력&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;history -10&lt;/code&gt; 마지막부터 10개까지 로그 출력&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;history -c&lt;/code&gt;를 하면 히스토리기록을 모두 삭제한다.&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.thegeekstuff.com/2008/08/15-examples-to-master-linux-command-line-history/&#34;&gt;15 Examples To Master Linux Command Line History&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://unixhelp.ed.ac.uk/shell/ksh_hist.html&#34;&gt;Using command history with the Korn shell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;&lt;a href=&#34;http://www.linuxquestions.org/questions/aix-43/history-cammand-with-date-format-705416/&#34;&gt;ksh은 안된다.&lt;/a&gt; 꼼수로 다음과 같이 사용한다. &lt;code&gt;PS1=&#39;$(printf &amp;quot;%(# %D %T )T&amp;quot; | read -s)$ &#39;&lt;/code&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>VIM</title>
      <link>http://blog.kiyeon.net/2015/06/12/vim/</link>
      <pubDate>Fri, 12 Jun 2015 10:08:44 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/12/vim/</guid>
      <description>&lt;p&gt;나는 &lt;a href=&#34;http://www.vim.org&#34;&gt;vim&lt;/a&gt;을 좋아하는데 그 이유는&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;마우스 사용을 최소화하여 키보드로만 작업이 가능하고,&lt;/li&gt;
&lt;li&gt;프로그램이 작고 가볍고,&lt;/li&gt;
&lt;li&gt;그렇기에 웬만한 머신에는 &lt;a href=&#34;http://www.vim.org&#34;&gt;vim&lt;/a&gt; 또는 vi가 설치되어있어 쉽게 에디팅이 가능하기 때문이다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;해서 웬만한 키보드 작업을 &lt;a href=&#34;http://www.vim.org&#34;&gt;vim&lt;/a&gt;화 시키고 있는데&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chrome은 &lt;a href=&#34;https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb?hl=en-US&#34;&gt;Vimium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Eclipse에서는 &lt;a href=&#34;http://marketplace.eclipse.org/content/vrapper-vim&#34;&gt;Vrapper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SublimeText에서는 &lt;a href=&#34;https://www.sublimetext.com/docs/2/vintage.html&#34;&gt;Vintage Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Shell에서는 &amp;lsquo;&lt;a href=&#34;http://ss64.com/bash/set.html&#34;&gt;set&lt;/a&gt; -o vi&amp;rsquo;
를 사용하며 유명한 웹에디터들은 &lt;a href=&#34;http://www.vim.org&#34;&gt;vim&lt;/a&gt;모드를 지원하고 있어 가능하다면 찾아쓰는 편이다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://www.vim.org&#34;&gt;vim&lt;/a&gt;은 &lt;a href=&#34;http://en.wikipedia.org/wiki/Vim_(text_editor)&#34;&gt;Vi IMproved의 약자로 Bill Joy의 vi를 개선한 버전이다&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.vim.org&#34;&gt;vim&lt;/a&gt;을 처음 설치하고 실행해보면 굉장히 초라한 툴처럼 보이지만 많은 기능들이 집약된 강력한 툴이다.  모든 설정을 텍스트로 할 수 있는데 해당 설정만 있다면 어디서든 동일한 환경을 구축 할 수 있다는게 장점이다. 이런 환경설정과 다양한 플러그인들을 조합하면 화려한 개발환경으로 변모한다. 즉, 사용자의 입맛대로 툴을 꾸밀 수 있다는게 최대 장점이다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;물론 그런만큼 처음 사용하는데 진입장벽이 높긴하며 설정에 많은 시간을 할애해야 한다.&lt;/p&gt;

&lt;p&gt;내가 생각하는 vim의 장점&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;가볍고 빠르다.&lt;/li&gt;
&lt;li&gt;모든 작업을 키보드만으로 할 수 있다.(mouse free)&lt;/li&gt;
&lt;li&gt;탭과 화면분할기능이 있고 현재 값을 세션파일에 저장하여 사용 할 수 있다.&lt;/li&gt;
&lt;li&gt;syntax highlight기능이 있으며 직접 설정을 추가하거나 변경할 수 있다.&lt;/li&gt;
&lt;li&gt;환경설정과 플러그인, 서드파티 프로그램들을 사용하여 취향에 맞게 꾸밀 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;plugins&#34;&gt;Plugins&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://github.com/gmarik/vundle&#34;&gt;Vundle&lt;/a&gt; - vundle makes it easy to find and install plugins without ever leaving the Vim environment.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://vim-voom.github.io/&#34;&gt;VOoM&lt;/a&gt; - VOoM (Vim Outliner of Markups) is a plugin for text editor Vim that turns Vim into a two-pane outliner.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;useful-site&#34;&gt;Useful site&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://vimawesome.com/&#34;&gt;VimAwesome&lt;/a&gt; - Awesome &lt;a href=&#34;http://www.vim.org&#34;&gt;vim&lt;/a&gt; plugins&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://vim-scripts.org/&#34;&gt;Vim Scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://usevim.com/&#34;&gt;usevim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://vim.rtorr.com/lang/ko/&#34;&gt;vim cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html&#34;&gt;vi / vim graphical cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tip&#34;&gt;Tip&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:set mouse=a&lt;/code&gt; : vim에서 마우스 사용&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:vim-mouse&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:vim-mouse&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zz&lt;/code&gt; : 현재 커서가 있는 라인을 화면 가운데로 스크롤한다. &lt;code&gt;H&lt;/code&gt;:커서를 화면 첫라인으로, &lt;code&gt;M&lt;/code&gt;:커서를 화면 중간라인으로, &lt;code&gt;L&lt;/code&gt;:커서를 화면 마지막라인으로 이동, &lt;code&gt;gg&lt;/code&gt;는 파일의 최상단 라인으로 이동, &lt;code&gt;G&lt;/code&gt;는 파일의 최하단 라인으로 이동.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ZZ&lt;/code&gt; : 저장하고 종료한다. &lt;code&gt;:wq&lt;/code&gt;와 동일.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl-v + Shift+i&lt;/code&gt; : 비주얼 블럭모드에서 세로로 스크롤한뒤 &lt;code&gt;Shift+i&lt;/code&gt;를 하면 입력모드가 되는데 입력을 마친뒤 &lt;code&gt;esc&lt;/code&gt;를 누르면 세로선택된 모든 행에 입력내용이 기록된다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt; : 단어에서 &lt;code&gt;*&lt;/code&gt;를 누르면 해당 단어들이 highlight된다. &lt;code&gt;n&lt;/code&gt;이나 &lt;code&gt;N&lt;/code&gt;으로 이동할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+g&lt;/code&gt; : 현재 파일명과 상태및 위치정보&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vim +X filename&lt;/code&gt; or &lt;code&gt;:X&lt;/code&gt; : 보안 파일 만들기. 이 옵션을 사용하면 &lt;code&gt;Enter encryption key:&lt;/code&gt;를 입력받고 내용은 모두 암호화된다. 보거나 편집을 하려면 패스워드를 입력해야 한다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mcdruid.co.uk/content/installing-subversion-and-vim-on-a-shared-host&#34;&gt;installing subversion and vim on a shared host&lt;/a&gt; - local 계정에 최신버전 설치방법&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vim -Nu {vimrc}&lt;/code&gt; or &lt;code&gt;:so %MYVIMRC&lt;/code&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:reload-vimrc&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:reload-vimrc&#34;&gt;6&lt;/a&gt;&lt;/sup&gt; - 환경파일 경로 지정 또는 실행중 설정 리로드&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;emacs는 꼭 다뤄보고 싶은 툴중 하나인데 그 전단계에서 vim에 너무 익숙해저버렸다. 하지만 꼭 환경을 emacs화 하고 싶다.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;나는 단축키를 사랑한다.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;vim &lt;a href=&#34;https://www.google.co.kr/search?q=vim&amp;amp;es_sm=93&amp;amp;tbm=isch&amp;amp;tbo=u&amp;amp;source=univ&amp;amp;sa=X&amp;amp;ved=0CDQQsARqFQoTCPXB1YOBicYCFUUTvAodWvgA1Q&amp;amp;biw=950&amp;amp;bih=1094#imgrc=_&#34;&gt;screenshot&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:vim-mouse&#34;&gt;맥의 iterm2에서는 vim과 tmux의 마우스 연동이 잘 된다. &lt;a href=&#34;http://superuser.com/a/741752&#34;&gt;kitty나 putty에서는 tmux에서 vim을 띄우고 마우스휠 다운은 잘 동작하는데 업을 하면 동작하지 않는다&lt;/a&gt;. kitty &lt;code&gt;0.63.0.7p(2014.03.19)&lt;/code&gt;을 사용하는데 &lt;code&gt;0.63.0.8(2014.05.01)&lt;/code&gt;에서 &lt;a href=&#34;http://www.9bis.net/kitty/?action=news&amp;amp;zone=en&#34;&gt;패치&lt;/a&gt;(&lt;code&gt;Bug fix: mouse scrolling with a huge value in &amp;quot;Lines of scrollback&amp;quot; causes a crash&lt;/code&gt;)됐다. 현재는 &lt;code&gt;0.63.2.1p(2014.11.26)&lt;/code&gt;를 사용중이다.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:vim-mouse&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;&lt;a href=&#34;http://www.cyberciti.biz/open-source/command-line-hacks/20-unix-command-line-tricks-part-i/&#34;&gt;20 Unix Command Line Tricks – Part I&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:reload-vimrc&#34;&gt;&lt;a href=&#34;http://superuser.com/a/132030&#34;&gt;How do you reload your .vimrc file without restarting vim?&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:reload-vimrc&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>SSH Escape</title>
      <link>http://blog.kiyeon.net/2015/06/11/ssh-escape/</link>
      <pubDate>Thu, 11 Jun 2015 17:31:02 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/11/ssh-escape/</guid>
      <description>&lt;p&gt;ssh접속중 탈출하고 싶다면 탈출키 &lt;code&gt;~&lt;/code&gt;를 사용한다.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% ssh acc@localhost
% ~? # 실제로 ~는 탈출키이므로 화면에 보이지 않는다.
Supported escape sequences:
 ~.   - terminate connection (and any multiplexed sessions)
 ~B   - send a BREAK to the remote system
 ~C   - open a command line
 ~R   - request rekey
 ~V/v - decrease/increase verbosity (LogLevel)
 ~^Z  - suspend ssh
 ~#   - list forwarded connections
 ~&amp;amp;   - background ssh (when waiting for connections to terminate)
 ~?   - this message
 ~~   - send the escape character by typing it twice
(Note that escapes are only recognized immediately after newline.)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ssh접속중 로컬작업이 필요하면 &lt;code&gt;~^Z&lt;/code&gt;를 사용하면 된다.&lt;/p&gt;

&lt;p&gt;백그라운드 잡 리스트를 보고 싶다면 &lt;code&gt;jobs&lt;/code&gt; or &lt;code&gt;bg&lt;/code&gt;&lt;br /&gt;
다시 돌아가려면 &lt;code&gt;fg&lt;/code&gt;(마지막 잡으로 복귀)&lt;br /&gt;
특정잡으로 돌아가려면 &lt;code&gt;fg %숫자&lt;/code&gt;&lt;br /&gt;
종료하려면 &lt;code&gt;kill %숫자&lt;/code&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ref&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ref&#34;&gt;&lt;a href=&#34;http://www.thegeekstuff.com/2010/05/unix-background-job/&#34;&gt;Bg, Fg, &amp;amp;, Ctrl-Z – 5 Examples to Manage Unix Background Jobs&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ref&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>rotate nohup out file</title>
      <link>http://blog.kiyeon.net/2015/06/11/rotate-nohup-out-file/</link>
      <pubDate>Thu, 11 Jun 2015 09:07:45 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/11/rotate-nohup-out-file/</guid>
      <description>&lt;p&gt;nohup은 터미널이 종료되어도 프로세스를 종료시키지 않고 동작시킬때 사용한다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% nohup COMMAND        # nohup.out에 로그가 기록된다.
% nohup COMMAND &amp;gt; FILE # FILE에 로그가 기록된다.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;표준출력과 표준에러는 출력파일을 지정하지 않으면 디폴트로 nohup.out에 기록된다.&lt;/p&gt;

&lt;p&gt;로그파일을 지우면 프로세스는 출력파일을 잃게되고 프로세스를 재기동하지 않는 이상 로그를 볼 방법이 없다. 디버깅이 어려워지는 상황이 되는것이다. 물론 로그를 표준출력에 의지하지 않고 내부 로깅처리를 한다면야 상관없겠지만 간단한 스크립트에 그런 코드까지 추가한다는게 번거롭고 쉽지 않기도 하다.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;mknod로 fifo파일을 만들고 nohup의 출력을 fifo파일로 한다. cat에서 fifo를 입력으로 받아 출력방향을 정한다. 표준출력은 &lt;code&gt;&amp;gt;&lt;/code&gt;, 표준에러는 &lt;code&gt;2&amp;gt;&lt;/code&gt; 표준출력과 같은 파일에 표준에러를 쓰려면 &lt;code&gt;&amp;amp;1&lt;/code&gt;을 준다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; 주의할점은 프로세스실행후 처음 fifo에 대한 출력을 한번 뚫어(?) 줘야 한다는거다. 그렇지 않으면 프로세스가 stop상태로 동작을 하지 않는다. 아마 출력장치가 접속되길 기다리는거 같다. 한번 출력지정후엔 출력파일이 끊겨도 계속 동작한다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mknod /tmp/mypipe p
cat &amp;lt; /tmp/mypipe &amp;gt; /tmp/myreallog
nohup myapplication &amp;gt;/tmp/mypipe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To rotate the log&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mv /tmp/myreallog /tmp/rotatedlog
kill [pid of the cat process]
cat &amp;lt; /tmp/mypipe &amp;gt;/tmp/myreallog
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://silviud.blogspot.kr/2011/01/rotate-nohup-out-file-nohuplog.html&#34;&gt;rotate nohup out file (nohup.log)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;alternative&#34;&gt;Alternative&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://linux.softpedia.com/get/Utilities/flog-12382.shtml&#34;&gt;flog&lt;/a&gt; - flog (file logger) is a program that reads input from STDIN and writes to a file.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xp-rience.blogspot.kr/2010/07/using-roratelogs-to-rotate-nohupout.html&#34;&gt;rotatelogs or logrotate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;터미널이 종료되면 사용자의 모든 프로세스에 hangup signal이 전달되고 이 시그널을 받은 프로세스들은 종료절차를 밟는다.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;&lt;code&gt;COMMAND &amp;gt; stdout.log 2&amp;gt; &amp;amp;1&lt;/code&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;Ubuntu에서는 출력파일이 없어지면 &lt;strong&gt;broken pipe  nohup&lt;/strong&gt;이 발생하면서 프로세스가 종료된다.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>프로그래머를 위한 ack(like-grep)</title>
      <link>http://blog.kiyeon.net/2015/06/09/peurogeuraemeoreul-wihan-ack-like-grep/</link>
      <pubDate>Tue, 09 Jun 2015 10:27:57 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/09/peurogeuraemeoreul-wihan-ack-like-grep/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://unixhelp.ed.ac.uk/CGI/man-cgi?grep&#34;&gt;grep&lt;/a&gt;은 텍스트에서 키워드를 찾아내는 툴이다. 다음과 같이 사용한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% lsb_release --all | grep -i desc
Description:    Ubuntu 14.04.2 LTS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;데이터가 많으면 해당 키워드를 찾기가 힘든데 이때 컬러옵션&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:grep-color&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:grep-color&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;을 사용할 수 있다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;% cat /etc/services | grep --color=auto -i http
# Updated from http://www.iana.org/assignments/port-numbers and other
# sources like http://www.freebsd.org/cgi/cvsweb.cgi/src/etc/services .
http            80/tcp          www             # WorldWideWeb HTTP
http            80/udp                          # HyperText Transfer Protocol
https           443/tcp                         # http protocol over TLS/SSL
https           443/udp
http-alt        8080/tcp        webcache        # WWW caching service
http-alt        8080/udp
hkp             11371/tcp                       # OpenPGP HTTP Keyserver
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;grep은 컬러지정에 한계가 있고 키워드가있는 라인만 출력된다. 전체적으로 내용이 표시되며 특정 키워드마다 색을 다르게 적용하고 싶었는데 &lt;a href=&#34;http://beyondgrep.com/&#34;&gt;ack&lt;/a&gt;를 발견했다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://beyondgrep.com/&#34;&gt;ack&lt;/a&gt;는 빠르고, 소스코드를 찾는 프로그래머를 위해 만들어졌다. 순수 펄로작성되어 펄(5.8.8 이상)이 설치된 어느 머신에서나 간편하게 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://beyondgrep.com/install/&#34;&gt;ack 설치&lt;/a&gt;
&lt;code&gt;curl http://beyondgrep.com/ack-2.14-single-file &amp;gt; ~/bin/ack &amp;amp;&amp;amp; chmod 0755 !#:3&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://beyondgrep.com/&#34;&gt;ack&lt;/a&gt;사이트에 가면 &lt;a href=&#34;http://beyondgrep.com/more-tools/&#34;&gt;ack를 사용한 다양한 툴들&lt;/a&gt;을 모아놨는데 &lt;a href=&#34;https://github.com/paoloantinori/hhighlighter&#34;&gt;hhighlighter&lt;/a&gt;를 사용하면 쉽게 파일내 키워드들에 highlight를 적용할 수 있다.
&lt;code&gt;cat file | h foo bar bat&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;vim이나 emacs, TextMate를 위한 플러그인도 있으며 다른 grep-like 툴들도 안내하고 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ack in five minutes&lt;/strong&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=sKmyl5D8Da8&#34;&gt;Rocky Mountain Ruby 2012 Lightning Talk: Ack by Cameron Pope&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:grep-color&#34;&gt;grep에서 찾은 키워드의 컬러를 변경할 수 있는데 GREP_COLOR환경변수를 사용한다. &lt;code&gt;GREP_COLOR=&amp;quot;1;33;40&amp;quot;&lt;/code&gt;. 값은 &lt;a href=&#34;http://www.pixelbeat.org/docs/terminal_colours/&#34;&gt;안시컬러&lt;/a&gt;를 사용한다.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:grep-color&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>